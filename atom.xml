<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>web personal developer</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.webpersonaldeveloper.cn/"/>
  <updated>2016-05-07T10:45:11.126Z</updated>
  <id>http://www.webpersonaldeveloper.cn/</id>
  
  <author>
    <name>Stone Fang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://www.webpersonaldeveloper.cn/2016/05/06/How%20to%20install%20dummynet%20on%20redhat/"/>
    <id>http://www.webpersonaldeveloper.cn/2016/05/06/How to install dummynet on redhat/</id>
    <published>2016-05-06T01:44:41.792Z</published>
    <updated>2016-05-07T10:45:11.126Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://vault.centos.org/7.2.1511/updates/Source/SPackages/kernel-3.10.0-327.4.5.el7.src.rpm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://vault.centos.org/7.2.1511/updates/Source/SPackages/kernel-3.10.0-327.4.5.el7.src.rpm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.rpmfind.net/linux/RPM/centos/updates/7.2.1511/x86_64/Packages/kernel-3.10.0-327.13.1.el7.x86_64.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.rpmfind.net/linux/RPM/centos/updates/7.2.1511/x86_64/Packages/kernel-3.10.0-327.13.1.el7.x86_64.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://xmodulo.com/how-to-install-dummynet-on-centos.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://xmodulo.com/how-to-install-dummynet-on-centos.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;redhat&lt;br&gt;&lt;a href=&quot;https://access.redhat.com/articles/3078&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://access.redhat.com/articles/3078&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;unsigned int hook_arp( unsigned int hooknum, struct sk_buff &lt;em&gt;*skb,&lt;br&gt;                       const struct net_device &lt;/em&gt;in,&lt;br&gt;                       const struct net_device &lt;em&gt;out,&lt;br&gt;                       int (&lt;/em&gt;okfn)(struct sk_buff *) );&lt;/p&gt;
&lt;p&gt;/usr/src/kernels/linux-3.10.0-327.4.5.el7/include/linux/netfilter.h&lt;br&gt;定义了nf_hook_ops 结构&lt;/p&gt;
&lt;p&gt;struct nf_hook_ops {&lt;br&gt;        struct list_head list;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/* User fills in from here down. */
nf_hookfn       *hook;
struct module   *owner;
void            *priv;
u_int8_t        pf;
unsigned int    hooknum;
/* Hooks are ordered in ascending priority. */
int             priority;

/* Reserved for use in the future RHEL versions. Set to zero. */
unsigned long   __rht_reserved1;
unsigned long   __rht_reserved2;
unsigned long   __rht_reserved3;
unsigned long   __rht_reserved4;
unsigned long   __rht_reserved5;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;};&lt;/p&gt;
&lt;p&gt;typedef unsigned int nf_hookfn(const struct nf_hook_ops &lt;em&gt;ops,&lt;br&gt;                               struct sk_buff &lt;/em&gt;skb,&lt;br&gt;                               const struct net_device &lt;em&gt;in,&lt;br&gt;                               const struct net_device &lt;/em&gt;out,&lt;/p&gt;
&lt;p&gt;#ifndef &lt;strong&gt;GENKSYMS&lt;/strong&gt;&lt;br&gt;                               const struct nf_hook_state *state&lt;/p&gt;
&lt;p&gt;#else&lt;br&gt;                               int (&lt;em&gt;okfn)(struct sk_buff &lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;#endif&lt;br&gt;                               );&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://vault.centos.org/7.2.1511/updates/Source/SPackages/kernel-3.10.0-327.4.5.el7.src.rpm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git 常用命令</title>
    <link href="http://www.webpersonaldeveloper.cn/2016/05/05/git/"/>
    <id>http://www.webpersonaldeveloper.cn/2016/05/05/git/</id>
    <published>2016-05-05T08:10:41.853Z</published>
    <updated>2016-05-07T10:47:45.317Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;1.apple patch&lt;/p&gt;
&lt;p&gt;git apply xxx.patch&lt;/p&gt;
&lt;p&gt;2.clone 指定的branch&lt;/p&gt;
&lt;p&gt;git clone -b &lt;branch&gt; &lt;remote_repo&gt;&lt;/remote_repo&gt;&lt;/branch&gt;&lt;/p&gt;
&lt;p&gt;3.查找本地branch&lt;/p&gt;
&lt;p&gt;git branch &lt;/p&gt;
&lt;p&gt;4.更换repo远程地址&lt;br&gt; git remote get-url origin //查看远程url&lt;br&gt; git remote set-url origin //设置新的url&lt;br&gt; git push // 提交到新的repo&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;1.apple patch&lt;/p&gt;
&lt;p&gt;git apply xxx.patch&lt;/p&gt;
&lt;p&gt;2.clone 指定的branch&lt;/p&gt;
&lt;p&gt;git clone -b &lt;branch&gt; &lt;remote_repo&gt;&lt;/remote_re
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>cassandra develope in eclipse 环境构建</title>
    <link href="http://www.webpersonaldeveloper.cn/2016/05/05/cassandra-buildin-eclipse/"/>
    <id>http://www.webpersonaldeveloper.cn/2016/05/05/cassandra-buildin-eclipse/</id>
    <published>2016-05-05T08:07:24.235Z</published>
    <updated>2016-05-05T08:55:43.533Z</updated>
    
    <content type="html">&lt;p&gt;1.fork cassandra 代码&lt;br&gt;然后clone 到本地（cassandra-trunk 是head 分支)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/FS1360472174/cassandra.git
cassandra-trunk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2.&lt;code&gt;ant build&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这边有可能会出现字符编码问题，手动清除一下&lt;/p&gt;
&lt;p&gt;3.生成eclipse工程&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ant generate-eclipse-files
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;4.生成jar包&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ant
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;build 目录下会生成apache-cassandra-xxx.jar&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;references&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://wiki.apache.org/cassandra/RunningCassandraInEclipse&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://wiki.apache.org/cassandra/RunningCassandraInEclipse&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;1.fork cassandra 代码&lt;br&gt;然后clone 到本地（cassandra-trunk 是head 分支)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/FS1360472174/cassandra.git
cassa
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>cassandra java driver log 配置</title>
    <link href="http://www.webpersonaldeveloper.cn/2016/04/29/cassandra-java-driver-log/"/>
    <id>http://www.webpersonaldeveloper.cn/2016/04/29/cassandra-java-driver-log/</id>
    <published>2016-04-29T09:04:27.756Z</published>
    <updated>2016-05-01T04:41:53.683Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;enable/disable trace log&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;工程中不导入logback-classic.jar,logback-core.jar&lt;/p&gt;
&lt;p&gt;注意我们同样可以使用slf4j 来解决这个问题&lt;br&gt;&lt;a href=&quot;http://www.slf4j.org/codes.html#StaticLoggerBinder&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.slf4j.org/codes.html#StaticLoggerBinder&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SLF4J: Failed to load class &amp;quot;org.slf4j.impl.StaticLoggerBinder&amp;quot;.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是这样太过粗暴了，有时候我们需要java-driver的调试信息，比如像下面这样有用的信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DEBUG [cluster2] [/XXX:9042] Query completed normally, took 264 ms: [1 bound values] select * from TABLE where userid=? limit 5;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是默认的java-driver 级别是DEBUG,导致console中打印了太多的内容。&lt;/p&gt;
&lt;p&gt;造成了视觉污染，同时很难发现自己需要的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置日志打印级别&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;方案1&lt;/p&gt;
&lt;p&gt;在每个insert/query 中设置disable/enable trace&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PreparedStatement ps = session.prepare(&amp;quot;&amp;quot;);
ps.setConsistencyLevel(ConsistencyLevel.LOCAL_QUORUM).disableTracing();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;方案2&lt;/p&gt;
&lt;p&gt;方案1有效，但是试用场景有限，需要一个可配置的文件进行全局设置&lt;br&gt;以logback 为例。需要logback.xml 来配置，自定义DEBUG/INFO/WARN/WRONG级别&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;configuration&amp;gt;
&amp;lt;!-- log INFO or higher messages to the console --&amp;gt;
&amp;lt;appender name=&amp;quot;console&amp;quot; class=&amp;quot;ch.qos.logback.core.ConsoleAppender&amp;quot;&amp;gt;
    &amp;lt;encoder&amp;gt;
        &amp;lt;pattern&amp;gt;%-5p %msg%n&amp;lt;/pattern&amp;gt;
    &amp;lt;/encoder&amp;gt;
&amp;lt;/appender&amp;gt;

&amp;lt;!-- log everything to a rolling file --&amp;gt;
&amp;lt;appender name=&amp;quot;file&amp;quot; class=&amp;quot;ch.qos.logback.core.rolling.RollingFileAppender&amp;quot;&amp;gt;
    &amp;lt;file&amp;gt;driver.log&amp;lt;/file&amp;gt;
    &amp;lt;encoder&amp;gt;
        &amp;lt;pattern&amp;gt;%-5p [%d{ISO8601}] [%t] %F:%L - %msg%n&amp;lt;/pattern&amp;gt;
    &amp;lt;/encoder&amp;gt;
    &amp;lt;rollingPolicy class=&amp;quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&amp;quot;&amp;gt;
        &amp;lt;!-- daily rollover --&amp;gt;
        &amp;lt;fileNamePattern&amp;gt;driver.%d{yyyy-MM-dd}.log&amp;lt;/fileNamePattern&amp;gt;
        &amp;lt;!-- keep 30 days&amp;apos; worth of history --&amp;gt;
        &amp;lt;maxHistory&amp;gt;30&amp;lt;/maxHistory&amp;gt;
&amp;lt;/rollingPolicy&amp;gt;
&amp;lt;/appender&amp;gt;

&amp;lt;!-- use AsyncAppender for lower latencies --&amp;gt;
&amp;lt;appender name=&amp;quot;async&amp;quot; class=&amp;quot;ch.qos.logback.classic.AsyncAppender&amp;quot;&amp;gt;
    &amp;lt;appender-ref ref=&amp;quot;console&amp;quot; /&amp;gt;
    &amp;lt;appender-ref ref=&amp;quot;file&amp;quot; /&amp;gt;
&amp;lt;/appender&amp;gt;

&amp;lt;!--
Turn on slow query logging by setting this logger to DEBUG; 
set level to TRACE to also log query parameters 
--&amp;gt;
&amp;lt;logger name=&amp;quot;com.datastax.driver.core.QueryLogger.SLOW&amp;quot; level=&amp;quot;DEBUG&amp;quot; /&amp;gt;

&amp;lt;root level=&amp;quot;ERROR&amp;quot;&amp;gt;
    &amp;lt;appender-ref ref=&amp;quot;async&amp;quot; /&amp;gt;
&amp;lt;/root&amp;gt;

&amp;lt;/configuration&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;参考&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;https://datastax.github.io/java-driver/2.1.7/features/logging/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://datastax.github.io/java-driver/2.1.7/features/logging/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;enable/disable trace log&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;工程中不导入logback-classic.jar,logback-core.jar&lt;/p&gt;
&lt;p&gt;注意我们同样可以使用slf4j 来解决这个问题&lt;br&gt;&lt;a href=&quot;ht
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>cassandra 写数据以及副本放置策略</title>
    <link href="http://www.webpersonaldeveloper.cn/2016/04/28/cassandra-write/"/>
    <id>http://www.webpersonaldeveloper.cn/2016/04/28/cassandra-write/</id>
    <published>2016-04-28T11:10:25.275Z</published>
    <updated>2016-05-01T04:31:53.025Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;application发送数据到server&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160417175535735&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;application 发送请求到server&lt;/li&gt;
&lt;li&gt;根据设置的load balance 规则从cluster中挑选一个coordinator，一般使用轮询即可。cluster 中的cassandra node 不仅作为数据库的储存节点，同样作为request 请求处理的server。所以保证每个节点处理的request 一样的balance算法即可&lt;/li&gt;
&lt;li&gt;然后根据插入数据的主键hash value,来将第一份数据写入到对应节点中&lt;/li&gt;
&lt;li&gt;然后根据replicator,write consistency,replication strategy ,来写副本&lt;br&gt;eg.replicator=3,write consistency=2,replication strategy=simple strategy&lt;br&gt;则表示成功写入到2个节点中，application的写操作才算成功。&lt;br&gt;simple strategy 表明副本是放在第一个node 节点环位置的下一个节点&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Note-很重要的一点&lt;/strong&gt;&lt;br&gt;通过上面描述，发现可以根据hash value 来确定一条数据存放在哪个节点上，然后根据replication的参数设置，我们可以确定数据副本存放在哪个节点上。那么对于read 操作，我们就可以根据条件的hash value 来找到存放数据的第一个节点，然后根据数据副本来找其他replicate 数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;上面认识是错误的&lt;/strong&gt;&lt;br&gt;首先，考虑下如果我们添加node到cluster中，假如数据存放的第一个node hash 受到影响，数据要移除到新加入的node,这个操作很容易实现，那么按照我们上面的认识，其他的副本数据如何处理呢？&lt;br&gt;data的存放的第一个节点变化了，然后再根据replicate stragtegy,已经找不到其他副本了。&lt;br&gt;此外，cassandra 的node是无主机模式，没有主从节点，每份数据都是一样的，但是按照上面的说法，数据的存放的第一个节点重要性又高于其他节点。&lt;/p&gt;
&lt;p&gt;综上，上述认识错误&lt;br&gt;&lt;strong&gt;正确的认识&lt;/strong&gt;&lt;br&gt;cassandra 将数据成功写入后，会有一个map 表，来维护数据存放在哪些节点上&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nodetool getendpoint keyspace table partitionkey&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这条命令可以查询到数据存放在哪些node上面&lt;br&gt;看了下cassandra的源码，这些数据应该存放在org.apache.cassandra.db:type=StorageService中&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;写数据&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160417182913153&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;写数据到commit log&lt;/li&gt;
&lt;li&gt;写数据到memtable&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt; 数据写入到这两个数据结构中，以及replicate 数目达到write consistency数目后，一次写操作就完成了，&lt;br&gt; 写数据是内存操作，所以cassandra 写入速度很快。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将数据从memtable中冲刷到sstable中&lt;br&gt;sstable中的数据是不可更改的&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;application发送数据到server&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://img.blog.csdn.net/20160417175535735&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;application 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.webpersonaldeveloper.cn/2016/04/27/hello-world/"/>
    <id>http://www.webpersonaldeveloper.cn/2016/04/27/hello-world/</id>
    <published>2016-04-27T14:01:42.830Z</published>
    <updated>2016-04-28T10:10:05.248Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
